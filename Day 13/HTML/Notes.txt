HTML: Markup langauge used to present text based data in a thin software called browser. It uses a text based protocol called HTTP to transfer the text from one machine to another using internet as the medium of communication. Browsers are available on any electronic gadgets in which U can view ur text. 
To view the HTML Docs, we need browser. To Store HTML pages, we use a software called Web Server(IIS, WebSphere, Apache TomCat). These software understands the requests to it and render the page that it stores in it. This process of requesting and rendering is handled by HTTP. Pages that are processed in the server are called as SERVER SIDE COMPONENTS and the one that are processed in the browser is called CLIENT SIDE COMPONENTS. HTML, JS and many such light weight components are called CLIET SIDE because they are processed in the browser. 
Rich programmability that needs lots of memory, infrastructure will be done by SERVER Components like ASP, JSP, ASP.NET, PHP, Perl and many more. They are called SERVER COMPONENTS. SERVER Components have ability to do FILE IO, Database handling, Storage, Processing in a large scale capabilities. They also provide centralized data management and App handling. Client side is specific to the individual client. 

Plain HTML is static in nature. If U want dynamic content that has to be created based on an action done by a User, U need a small scale programmable language that is light weight yet powerful. They are called SCRIPTING Languages. JS, VBS are some of the examples of Scripting languages. Scripting languages will not provide solutions to all problems. Scripting languages will not have IO operations. To do that, we need rich, heavy powerful programing languages, but these cannot be installed or added into the browser. They are rather installed in heavy infrastructure so that all consumers of UR app can get consistant data. This is where U need a software to do that:Web Server does that. It processes the HTTP Requests sent by the consumers, fetches the pages from its repository, does the processing(Handling events, reading and writing) and sends the page as plain HTML to the Consumer using HTTP Response.  As the text now has Plain HTML, it will be displayed on any kind of browser. Further, if U want any user specific operations, that can be sent as plain JS, which is a default scripting language for all browsers, this will be processed in the client machine before the page is displayed to the user in the browser. 

